/*   Copyright (C) 2013-2014 Computer Sciences Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. */

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package ezbake.base.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Authorizations implements org.apache.thrift.TBase<Authorizations, Authorizations._Fields>, java.io.Serializable, Cloneable, Comparable<Authorizations> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Authorizations");

  private static final org.apache.thrift.protocol.TField FORMAL_AUTHORIZATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("formalAuthorizations", org.apache.thrift.protocol.TType.SET, (short)1);
  private static final org.apache.thrift.protocol.TField EXTERNAL_COMMUNITY_AUTHORIZATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("externalCommunityAuthorizations", org.apache.thrift.protocol.TType.SET, (short)2);
  private static final org.apache.thrift.protocol.TField PLATFORM_OBJECT_AUTHORIZATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformObjectAuthorizations", org.apache.thrift.protocol.TType.SET, (short)3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AuthorizationsStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AuthorizationsTupleSchemeFactory());
  }

  public Set<String> formalAuthorizations; // optional
  public Set<String> externalCommunityAuthorizations; // optional
  public Set<Long> platformObjectAuthorizations; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    FORMAL_AUTHORIZATIONS((short)1, "formalAuthorizations"),
    EXTERNAL_COMMUNITY_AUTHORIZATIONS((short)2, "externalCommunityAuthorizations"),
    PLATFORM_OBJECT_AUTHORIZATIONS((short)3, "platformObjectAuthorizations");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // FORMAL_AUTHORIZATIONS
          return FORMAL_AUTHORIZATIONS;
        case 2: // EXTERNAL_COMMUNITY_AUTHORIZATIONS
          return EXTERNAL_COMMUNITY_AUTHORIZATIONS;
        case 3: // PLATFORM_OBJECT_AUTHORIZATIONS
          return PLATFORM_OBJECT_AUTHORIZATIONS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.FORMAL_AUTHORIZATIONS,_Fields.EXTERNAL_COMMUNITY_AUTHORIZATIONS,_Fields.PLATFORM_OBJECT_AUTHORIZATIONS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.FORMAL_AUTHORIZATIONS, new org.apache.thrift.meta_data.FieldMetaData("formalAuthorizations", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.EXTERNAL_COMMUNITY_AUTHORIZATIONS, new org.apache.thrift.meta_data.FieldMetaData("externalCommunityAuthorizations", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.PLATFORM_OBJECT_AUTHORIZATIONS, new org.apache.thrift.meta_data.FieldMetaData("platformObjectAuthorizations", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Authorizations.class, metaDataMap);
  }

  public Authorizations() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Authorizations(Authorizations other) {
    if (other.isSetFormalAuthorizations()) {
      Set<String> __this__formalAuthorizations = new HashSet<String>(other.formalAuthorizations);
      this.formalAuthorizations = __this__formalAuthorizations;
    }
    if (other.isSetExternalCommunityAuthorizations()) {
      Set<String> __this__externalCommunityAuthorizations = new HashSet<String>(other.externalCommunityAuthorizations);
      this.externalCommunityAuthorizations = __this__externalCommunityAuthorizations;
    }
    if (other.isSetPlatformObjectAuthorizations()) {
      Set<Long> __this__platformObjectAuthorizations = new HashSet<Long>(other.platformObjectAuthorizations);
      this.platformObjectAuthorizations = __this__platformObjectAuthorizations;
    }
  }

  public Authorizations deepCopy() {
    return new Authorizations(this);
  }

  @Override
  public void clear() {
    this.formalAuthorizations = null;
    this.externalCommunityAuthorizations = null;
    this.platformObjectAuthorizations = null;
  }

  public int getFormalAuthorizationsSize() {
    return (this.formalAuthorizations == null) ? 0 : this.formalAuthorizations.size();
  }

  public java.util.Iterator<String> getFormalAuthorizationsIterator() {
    return (this.formalAuthorizations == null) ? null : this.formalAuthorizations.iterator();
  }

  public void addToFormalAuthorizations(String elem) {
    if (this.formalAuthorizations == null) {
      this.formalAuthorizations = new HashSet<String>();
    }
    this.formalAuthorizations.add(elem);
  }

  public Set<String> getFormalAuthorizations() {
    return this.formalAuthorizations;
  }

  public Authorizations setFormalAuthorizations(Set<String> formalAuthorizations) {
    this.formalAuthorizations = formalAuthorizations;
    return this;
  }

  public void unsetFormalAuthorizations() {
    this.formalAuthorizations = null;
  }

  /** Returns true if field formalAuthorizations is set (has been assigned a value) and false otherwise */
  public boolean isSetFormalAuthorizations() {
    return this.formalAuthorizations != null;
  }

  public void setFormalAuthorizationsIsSet(boolean value) {
    if (!value) {
      this.formalAuthorizations = null;
    }
  }

  public int getExternalCommunityAuthorizationsSize() {
    return (this.externalCommunityAuthorizations == null) ? 0 : this.externalCommunityAuthorizations.size();
  }

  public java.util.Iterator<String> getExternalCommunityAuthorizationsIterator() {
    return (this.externalCommunityAuthorizations == null) ? null : this.externalCommunityAuthorizations.iterator();
  }

  public void addToExternalCommunityAuthorizations(String elem) {
    if (this.externalCommunityAuthorizations == null) {
      this.externalCommunityAuthorizations = new HashSet<String>();
    }
    this.externalCommunityAuthorizations.add(elem);
  }

  public Set<String> getExternalCommunityAuthorizations() {
    return this.externalCommunityAuthorizations;
  }

  public Authorizations setExternalCommunityAuthorizations(Set<String> externalCommunityAuthorizations) {
    this.externalCommunityAuthorizations = externalCommunityAuthorizations;
    return this;
  }

  public void unsetExternalCommunityAuthorizations() {
    this.externalCommunityAuthorizations = null;
  }

  /** Returns true if field externalCommunityAuthorizations is set (has been assigned a value) and false otherwise */
  public boolean isSetExternalCommunityAuthorizations() {
    return this.externalCommunityAuthorizations != null;
  }

  public void setExternalCommunityAuthorizationsIsSet(boolean value) {
    if (!value) {
      this.externalCommunityAuthorizations = null;
    }
  }

  public int getPlatformObjectAuthorizationsSize() {
    return (this.platformObjectAuthorizations == null) ? 0 : this.platformObjectAuthorizations.size();
  }

  public java.util.Iterator<Long> getPlatformObjectAuthorizationsIterator() {
    return (this.platformObjectAuthorizations == null) ? null : this.platformObjectAuthorizations.iterator();
  }

  public void addToPlatformObjectAuthorizations(long elem) {
    if (this.platformObjectAuthorizations == null) {
      this.platformObjectAuthorizations = new HashSet<Long>();
    }
    this.platformObjectAuthorizations.add(elem);
  }

  public Set<Long> getPlatformObjectAuthorizations() {
    return this.platformObjectAuthorizations;
  }

  public Authorizations setPlatformObjectAuthorizations(Set<Long> platformObjectAuthorizations) {
    this.platformObjectAuthorizations = platformObjectAuthorizations;
    return this;
  }

  public void unsetPlatformObjectAuthorizations() {
    this.platformObjectAuthorizations = null;
  }

  /** Returns true if field platformObjectAuthorizations is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatformObjectAuthorizations() {
    return this.platformObjectAuthorizations != null;
  }

  public void setPlatformObjectAuthorizationsIsSet(boolean value) {
    if (!value) {
      this.platformObjectAuthorizations = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case FORMAL_AUTHORIZATIONS:
      if (value == null) {
        unsetFormalAuthorizations();
      } else {
        setFormalAuthorizations((Set<String>)value);
      }
      break;

    case EXTERNAL_COMMUNITY_AUTHORIZATIONS:
      if (value == null) {
        unsetExternalCommunityAuthorizations();
      } else {
        setExternalCommunityAuthorizations((Set<String>)value);
      }
      break;

    case PLATFORM_OBJECT_AUTHORIZATIONS:
      if (value == null) {
        unsetPlatformObjectAuthorizations();
      } else {
        setPlatformObjectAuthorizations((Set<Long>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case FORMAL_AUTHORIZATIONS:
      return getFormalAuthorizations();

    case EXTERNAL_COMMUNITY_AUTHORIZATIONS:
      return getExternalCommunityAuthorizations();

    case PLATFORM_OBJECT_AUTHORIZATIONS:
      return getPlatformObjectAuthorizations();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case FORMAL_AUTHORIZATIONS:
      return isSetFormalAuthorizations();
    case EXTERNAL_COMMUNITY_AUTHORIZATIONS:
      return isSetExternalCommunityAuthorizations();
    case PLATFORM_OBJECT_AUTHORIZATIONS:
      return isSetPlatformObjectAuthorizations();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Authorizations)
      return this.equals((Authorizations)that);
    return false;
  }

  public boolean equals(Authorizations that) {
    if (that == null)
      return false;

    boolean this_present_formalAuthorizations = true && this.isSetFormalAuthorizations();
    boolean that_present_formalAuthorizations = true && that.isSetFormalAuthorizations();
    if (this_present_formalAuthorizations || that_present_formalAuthorizations) {
      if (!(this_present_formalAuthorizations && that_present_formalAuthorizations))
        return false;
      if (!this.formalAuthorizations.equals(that.formalAuthorizations))
        return false;
    }

    boolean this_present_externalCommunityAuthorizations = true && this.isSetExternalCommunityAuthorizations();
    boolean that_present_externalCommunityAuthorizations = true && that.isSetExternalCommunityAuthorizations();
    if (this_present_externalCommunityAuthorizations || that_present_externalCommunityAuthorizations) {
      if (!(this_present_externalCommunityAuthorizations && that_present_externalCommunityAuthorizations))
        return false;
      if (!this.externalCommunityAuthorizations.equals(that.externalCommunityAuthorizations))
        return false;
    }

    boolean this_present_platformObjectAuthorizations = true && this.isSetPlatformObjectAuthorizations();
    boolean that_present_platformObjectAuthorizations = true && that.isSetPlatformObjectAuthorizations();
    if (this_present_platformObjectAuthorizations || that_present_platformObjectAuthorizations) {
      if (!(this_present_platformObjectAuthorizations && that_present_platformObjectAuthorizations))
        return false;
      if (!this.platformObjectAuthorizations.equals(that.platformObjectAuthorizations))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(Authorizations other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetFormalAuthorizations()).compareTo(other.isSetFormalAuthorizations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFormalAuthorizations()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.formalAuthorizations, other.formalAuthorizations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExternalCommunityAuthorizations()).compareTo(other.isSetExternalCommunityAuthorizations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExternalCommunityAuthorizations()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.externalCommunityAuthorizations, other.externalCommunityAuthorizations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatformObjectAuthorizations()).compareTo(other.isSetPlatformObjectAuthorizations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatformObjectAuthorizations()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformObjectAuthorizations, other.platformObjectAuthorizations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Authorizations(");
    boolean first = true;

    if (isSetFormalAuthorizations()) {
      sb.append("formalAuthorizations:");
      if (this.formalAuthorizations == null) {
        sb.append("null");
      } else {
        sb.append(this.formalAuthorizations);
      }
      first = false;
    }
    if (isSetExternalCommunityAuthorizations()) {
      if (!first) sb.append(", ");
      sb.append("externalCommunityAuthorizations:");
      if (this.externalCommunityAuthorizations == null) {
        sb.append("null");
      } else {
        sb.append(this.externalCommunityAuthorizations);
      }
      first = false;
    }
    if (isSetPlatformObjectAuthorizations()) {
      if (!first) sb.append(", ");
      sb.append("platformObjectAuthorizations:");
      if (this.platformObjectAuthorizations == null) {
        sb.append("null");
      } else {
        sb.append(this.platformObjectAuthorizations);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AuthorizationsStandardSchemeFactory implements SchemeFactory {
    public AuthorizationsStandardScheme getScheme() {
      return new AuthorizationsStandardScheme();
    }
  }

  private static class AuthorizationsStandardScheme extends StandardScheme<Authorizations> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Authorizations struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // FORMAL_AUTHORIZATIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct.formalAuthorizations = new HashSet<String>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  String _elem2;
                  _elem2 = iprot.readString();
                  struct.formalAuthorizations.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.setFormalAuthorizationsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // EXTERNAL_COMMUNITY_AUTHORIZATIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                struct.externalCommunityAuthorizations = new HashSet<String>(2*_set3.size);
                for (int _i4 = 0; _i4 < _set3.size; ++_i4)
                {
                  String _elem5;
                  _elem5 = iprot.readString();
                  struct.externalCommunityAuthorizations.add(_elem5);
                }
                iprot.readSetEnd();
              }
              struct.setExternalCommunityAuthorizationsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PLATFORM_OBJECT_AUTHORIZATIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set6 = iprot.readSetBegin();
                struct.platformObjectAuthorizations = new HashSet<Long>(2*_set6.size);
                for (int _i7 = 0; _i7 < _set6.size; ++_i7)
                {
                  long _elem8;
                  _elem8 = iprot.readI64();
                  struct.platformObjectAuthorizations.add(_elem8);
                }
                iprot.readSetEnd();
              }
              struct.setPlatformObjectAuthorizationsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Authorizations struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.formalAuthorizations != null) {
        if (struct.isSetFormalAuthorizations()) {
          oprot.writeFieldBegin(FORMAL_AUTHORIZATIONS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, struct.formalAuthorizations.size()));
            for (String _iter9 : struct.formalAuthorizations)
            {
              oprot.writeString(_iter9);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.externalCommunityAuthorizations != null) {
        if (struct.isSetExternalCommunityAuthorizations()) {
          oprot.writeFieldBegin(EXTERNAL_COMMUNITY_AUTHORIZATIONS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, struct.externalCommunityAuthorizations.size()));
            for (String _iter10 : struct.externalCommunityAuthorizations)
            {
              oprot.writeString(_iter10);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.platformObjectAuthorizations != null) {
        if (struct.isSetPlatformObjectAuthorizations()) {
          oprot.writeFieldBegin(PLATFORM_OBJECT_AUTHORIZATIONS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, struct.platformObjectAuthorizations.size()));
            for (long _iter11 : struct.platformObjectAuthorizations)
            {
              oprot.writeI64(_iter11);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AuthorizationsTupleSchemeFactory implements SchemeFactory {
    public AuthorizationsTupleScheme getScheme() {
      return new AuthorizationsTupleScheme();
    }
  }

  private static class AuthorizationsTupleScheme extends TupleScheme<Authorizations> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Authorizations struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetFormalAuthorizations()) {
        optionals.set(0);
      }
      if (struct.isSetExternalCommunityAuthorizations()) {
        optionals.set(1);
      }
      if (struct.isSetPlatformObjectAuthorizations()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetFormalAuthorizations()) {
        {
          oprot.writeI32(struct.formalAuthorizations.size());
          for (String _iter12 : struct.formalAuthorizations)
          {
            oprot.writeString(_iter12);
          }
        }
      }
      if (struct.isSetExternalCommunityAuthorizations()) {
        {
          oprot.writeI32(struct.externalCommunityAuthorizations.size());
          for (String _iter13 : struct.externalCommunityAuthorizations)
          {
            oprot.writeString(_iter13);
          }
        }
      }
      if (struct.isSetPlatformObjectAuthorizations()) {
        {
          oprot.writeI32(struct.platformObjectAuthorizations.size());
          for (long _iter14 : struct.platformObjectAuthorizations)
          {
            oprot.writeI64(_iter14);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Authorizations struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TSet _set15 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.formalAuthorizations = new HashSet<String>(2*_set15.size);
          for (int _i16 = 0; _i16 < _set15.size; ++_i16)
          {
            String _elem17;
            _elem17 = iprot.readString();
            struct.formalAuthorizations.add(_elem17);
          }
        }
        struct.setFormalAuthorizationsIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TSet _set18 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.externalCommunityAuthorizations = new HashSet<String>(2*_set18.size);
          for (int _i19 = 0; _i19 < _set18.size; ++_i19)
          {
            String _elem20;
            _elem20 = iprot.readString();
            struct.externalCommunityAuthorizations.add(_elem20);
          }
        }
        struct.setExternalCommunityAuthorizationsIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TSet _set21 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.platformObjectAuthorizations = new HashSet<Long>(2*_set21.size);
          for (int _i22 = 0; _i22 < _set21.size; ++_i22)
          {
            long _elem23;
            _elem23 = iprot.readI64();
            struct.platformObjectAuthorizations.add(_elem23);
          }
        }
        struct.setPlatformObjectAuthorizationsIsSet(true);
      }
    }
  }

}

